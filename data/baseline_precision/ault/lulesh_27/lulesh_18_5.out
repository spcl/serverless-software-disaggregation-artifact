cpu-bind=MASK - ault01, task  5  5 [1660945]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [1660947]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task  9  9 [1660949]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 26 26 [1660966]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  0  0 [1660940]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  1  1 [1660941]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  8  8 [1660948]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 13 13 [1660953]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 20 20 [1660960]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 21 21 [1660961]: mask 0x10000000010000000 set
cpu-bind=MASK - ault01, task 24 24 [1660964]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task  2  2 [1660942]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  3  3 [1660943]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  4  4 [1660944]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [1660946]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task 10 10 [1660950]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 11 11 [1660951]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 12 12 [1660952]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 14 14 [1660954]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [1660956]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 17 17 [1660957]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1660958]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 19 19 [1660959]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 22 22 [1660962]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 23 23 [1660963]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 25 25 [1660965]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task 15 15 [1660955]: mask 0x2000000002000000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 48.3726344 (s)
Grind time (us/z/c)  =  4.5850456 (per dom)  ( 48.372634 overall)
FOM                  =  5888.7092 (z/s)

