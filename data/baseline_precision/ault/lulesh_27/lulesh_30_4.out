cpu-bind=MASK - ault01, task  1  1 [1675913]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  0  0 [1675912]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  2  2 [1675914]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  3  3 [1675915]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  4  4 [1675916]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [1675918]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task 21 21 [1675933]: mask 0x10000000010000000 set
cpu-bind=MASK - ault01, task  5  5 [1675917]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  9  9 [1675921]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 11 11 [1675923]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 20 20 [1675932]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 26 26 [1675938]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 10 10 [1675922]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 15 15 [1675927]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 17 17 [1675929]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1675930]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 19 19 [1675931]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 25 25 [1675937]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task  8  8 [1675920]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 23 23 [1675935]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 12 12 [1675924]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 14 14 [1675926]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [1675928]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 22 22 [1675934]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task  7  7 [1675919]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 13 13 [1675925]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 24 24 [1675936]: mask 0x1000000001000 set
Running problem size 30^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 729000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  30
   MPI tasks           =  27
   Iteration count     =  3145
   Final Origin Energy =  1.482403e+06
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 4.365575e-10
        TotalAbsDiff = 1.139369e-08
        MaxRelDiff   = 4.706019e-14

Elapsed time         = 393.0742643 (s)
Grind time (us/z/c)  =  4.6290321 (per dom)  ( 393.07426 overall)
FOM                  =  5832.7528 (z/s)

