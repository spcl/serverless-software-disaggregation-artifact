cpu-bind=MASK - ault01, task  1  1 [1663954]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task 15 15 [1663968]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task  0  0 [1663953]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  4  4 [1663957]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [1663959]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  8  8 [1663961]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 10 10 [1663963]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 17 17 [1663970]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task  2  2 [1663955]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  3  3 [1663956]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  9  9 [1663962]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 25 25 [1663978]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task  7  7 [1663960]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 13 13 [1663966]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 18 18 [1663971]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 21 21 [1663974]: mask 0x10000000010000000 set
cpu-bind=MASK - ault01, task 23 23 [1663976]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 24 24 [1663977]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 26 26 [1663979]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  5  5 [1663958]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task 12 12 [1663965]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 14 14 [1663967]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [1663969]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 19 19 [1663972]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 20 20 [1663973]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 22 22 [1663975]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 11 11 [1663964]: mask 0x800000000800000 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 74.52346273 (s)
Grind time (us/z/c)  =  4.5866238 (per dom)  ( 74.523463 overall)
FOM                  =   5886.683 (z/s)

