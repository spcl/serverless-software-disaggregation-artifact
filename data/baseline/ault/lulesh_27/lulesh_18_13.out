cpu-bind=MASK - ault04, task  8  8 [97322]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task  0  0 [97314]: mask 0x1000000001 set
cpu-bind=MASK - ault04, task  2  2 [97316]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  3  3 [97317]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task 15 15 [97329]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task 21 21 [97335]: mask 0x10000000010000000 set
cpu-bind=MASK - ault04, task  5  5 [97319]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task 19 19 [97333]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task  4  4 [97318]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task 24 24 [97338]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task  6  6 [97320]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task  7  7 [97321]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task 10 10 [97324]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 12 12 [97326]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 17 17 [97331]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task 20 20 [97334]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 25 25 [97339]: mask 0x40000000040000000 set
cpu-bind=MASK - ault04, task 26 26 [97340]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task  1  1 [97315]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  9  9 [97323]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 11 11 [97325]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 13 13 [97327]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 14 14 [97328]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 16 16 [97330]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 18 18 [97332]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task 22 22 [97336]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 23 23 [97337]: mask 0x20000000020000000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 45.32638965 (s)
Grind time (us/z/c)  =  4.2963044 (per dom)  (  45.32639 overall)
FOM                  =  6284.4709 (z/s)

