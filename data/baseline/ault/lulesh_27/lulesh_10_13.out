cpu-bind=MASK - ault04, task  0  0 [96965]: mask 0x1000000001 set
cpu-bind=MASK - ault04, task  1  1 [96966]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task 13 13 [96978]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 19 19 [96984]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task 23 23 [96988]: mask 0x20000000020000000 set
cpu-bind=MASK - ault04, task 16 16 [96981]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task  6  6 [96971]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task  9  9 [96974]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 14 14 [96979]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 22 22 [96987]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 24 24 [96989]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task  5  5 [96970]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task 21 21 [96986]: mask 0x10000000010000000 set
cpu-bind=MASK - ault04, task 10 10 [96975]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 25 25 [96990]: mask 0x40000000040000000 set
cpu-bind=MASK - ault04, task  2  2 [96967]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  8  8 [96973]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task 12 12 [96977]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 20 20 [96985]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 26 26 [96991]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task  3  3 [96968]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  7  7 [96972]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task 11 11 [96976]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 15 15 [96980]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task 17 17 [96982]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task  4  4 [96969]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task 18 18 [96983]: mask 0x200000000200 set
Running problem size 10^3 per domain until completion
Num processors: 27
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.121829007 (s)
Grind time (us/z/c)  =  4.4225633 (per dom)  (  4.121829 overall)
FOM                  =  6105.0567 (z/s)

