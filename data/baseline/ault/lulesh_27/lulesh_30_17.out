cpu-bind=MASK - ault01, task 15 15 [4006366]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 17 17 [4006368]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task  0  0 [4006351]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  4  4 [4006355]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [4006357]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  2  2 [4006353]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  9  9 [4006360]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 25 25 [4006376]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task 26 26 [4006377]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  1  1 [4006352]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  3  3 [4006354]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  5  5 [4006356]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [4006358]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 10 10 [4006361]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 11 11 [4006362]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 12 12 [4006363]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 13 13 [4006364]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 14 14 [4006365]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [4006367]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 18 18 [4006369]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 19 19 [4006370]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 20 20 [4006371]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 21 21 [4006372]: mask 0x10000000010000000 set
cpu-bind=MASK - ault01, task 22 22 [4006373]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 23 23 [4006374]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 24 24 [4006375]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task  8  8 [4006359]: mask 0x10000000010 set
Running problem size 30^3 per domain until completion
Num processors: 27
Total number of elements: 729000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  30
   MPI tasks           =  27
   Iteration count     =  3145
   Final Origin Energy =  1.482403e+06
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 4.365575e-10
        TotalAbsDiff = 1.139369e-08
        MaxRelDiff   = 4.706019e-14

Elapsed time         = 352.0757696 (s)
Grind time (us/z/c)  =  4.1462141 (per dom)  ( 352.07577 overall)
FOM                  =  6511.9647 (z/s)

