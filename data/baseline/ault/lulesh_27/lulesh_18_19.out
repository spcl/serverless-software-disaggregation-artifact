cpu-bind=MASK - ault04, task  2  2 [99990]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  4  4 [99992]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task 18 18 [100006]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task  1  1 [99989]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  5  5 [99993]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task  7  7 [99995]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task 17 17 [100005]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task 23 23 [100011]: mask 0x20000000020000000 set
cpu-bind=MASK - ault04, task  0  0 [99988]: mask 0x1000000001 set
cpu-bind=MASK - ault04, task  6  6 [99994]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task 19 19 [100007]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task  3  3 [99991]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  8  8 [99996]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task 10 10 [99998]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 13 13 [100001]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 14 14 [100002]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 15 15 [100003]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task 16 16 [100004]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 20 20 [100008]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 22 22 [100010]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 24 24 [100012]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task 26 26 [100014]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task  9  9 [99997]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 11 11 [99999]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 21 21 [100009]: mask 0x10000000010000000 set
cpu-bind=MASK - ault04, task 25 25 [100013]: mask 0x40000000040000000 set
cpu-bind=MASK - ault04, task 12 12 [100000]: mask 0x40000000040 set
Running problem size 18^3 per domain until completion
Num processors: 27
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 45.27673143 (s)
Grind time (us/z/c)  =  4.2915975 (per dom)  ( 45.276731 overall)
FOM                  =  6291.3635 (z/s)

