cpu-bind=MASK - ault03, task  2  2 [239114]: mask 0x2000000002 set
cpu-bind=MASK - ault03, task 14 14 [239126]: mask 0x80000000080 set
cpu-bind=MASK - ault03, task 18 18 [239130]: mask 0x200000000200 set
cpu-bind=MASK - ault03, task 22 22 [239134]: mask 0x800000000800 set
cpu-bind=MASK - ault03, task 23 23 [239135]: mask 0x20000000020000000 set
cpu-bind=MASK - ault03, task 25 25 [239137]: mask 0x40000000040000000 set
cpu-bind=MASK - ault03, task 15 15 [239127]: mask 0x2000000002000000 set
cpu-bind=MASK - ault03, task  4  4 [239116]: mask 0x4000000004 set
cpu-bind=MASK - ault03, task  8  8 [239120]: mask 0x10000000010 set
cpu-bind=MASK - ault03, task 10 10 [239122]: mask 0x20000000020 set
cpu-bind=MASK - ault03, task 24 24 [239136]: mask 0x1000000001000 set
cpu-bind=MASK - ault03, task 26 26 [239138]: mask 0x2000000002000 set
cpu-bind=MASK - ault03, task  0  0 [239112]: mask 0x1000000001 set
cpu-bind=MASK - ault03, task  1  1 [239113]: mask 0x40000000040000 set
cpu-bind=MASK - ault03, task  3  3 [239115]: mask 0x80000000080000 set
cpu-bind=MASK - ault03, task  5  5 [239117]: mask 0x100000000100000 set
cpu-bind=MASK - ault03, task  6  6 [239118]: mask 0x8000000008 set
cpu-bind=MASK - ault03, task  7  7 [239119]: mask 0x200000000200000 set
cpu-bind=MASK - ault03, task  9  9 [239121]: mask 0x400000000400000 set
cpu-bind=MASK - ault03, task 11 11 [239123]: mask 0x800000000800000 set
cpu-bind=MASK - ault03, task 12 12 [239124]: mask 0x40000000040 set
cpu-bind=MASK - ault03, task 13 13 [239125]: mask 0x1000000001000000 set
cpu-bind=MASK - ault03, task 16 16 [239128]: mask 0x100000000100 set
cpu-bind=MASK - ault03, task 17 17 [239129]: mask 0x4000000004000000 set
cpu-bind=MASK - ault03, task 19 19 [239131]: mask 0x8000000008000000 set
cpu-bind=MASK - ault03, task 20 20 [239132]: mask 0x400000000400 set
cpu-bind=MASK - ault03, task 21 21 [239133]: mask 0x10000000010000000 set
Running problem size 10^3 per domain until completion
Num processors: 27
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.109793815 (s)
Grind time (us/z/c)  =    4.40965 (per dom)  ( 4.1097938 overall)
FOM                  =  6122.9349 (z/s)

