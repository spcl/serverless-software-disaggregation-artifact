cpu-bind=MASK - ault03, task  9  9 [239637]: mask 0x400000000400000 set
cpu-bind=MASK - ault03, task 11 11 [239639]: mask 0x800000000800000 set
cpu-bind=MASK - ault03, task 14 14 [239642]: mask 0x80000000080 set
cpu-bind=MASK - ault03, task 19 19 [239647]: mask 0x8000000008000000 set
cpu-bind=MASK - ault03, task 16 16 [239644]: mask 0x100000000100 set
cpu-bind=MASK - ault03, task 12 12 [239640]: mask 0x40000000040 set
cpu-bind=MASK - ault03, task  7  7 [239635]: mask 0x200000000200000 set
cpu-bind=MASK - ault03, task 24 24 [239652]: mask 0x1000000001000 set
cpu-bind=MASK - ault03, task  0  0 [239628]: mask 0x1000000001 set
cpu-bind=MASK - ault03, task  1  1 [239629]: mask 0x40000000040000 set
cpu-bind=MASK - ault03, task  6  6 [239634]: mask 0x8000000008 set
cpu-bind=MASK - ault03, task 23 23 [239651]: mask 0x20000000020000000 set
cpu-bind=MASK - ault03, task  2  2 [239630]: mask 0x2000000002 set
cpu-bind=MASK - ault03, task  3  3 [239631]: mask 0x80000000080000 set
cpu-bind=MASK - ault03, task  4  4 [239632]: mask 0x4000000004 set
cpu-bind=MASK - ault03, task  5  5 [239633]: mask 0x100000000100000 set
cpu-bind=MASK - ault03, task  8  8 [239636]: mask 0x10000000010 set
cpu-bind=MASK - ault03, task 13 13 [239641]: mask 0x1000000001000000 set
cpu-bind=MASK - ault03, task 17 17 [239645]: mask 0x4000000004000000 set
cpu-bind=MASK - ault03, task 18 18 [239646]: mask 0x200000000200 set
cpu-bind=MASK - ault03, task 26 26 [239654]: mask 0x2000000002000 set
cpu-bind=MASK - ault03, task 10 10 [239638]: mask 0x20000000020 set
cpu-bind=MASK - ault03, task 15 15 [239643]: mask 0x2000000002000000 set
cpu-bind=MASK - ault03, task 21 21 [239649]: mask 0x10000000010000000 set
cpu-bind=MASK - ault03, task 22 22 [239650]: mask 0x800000000800 set
cpu-bind=MASK - ault03, task 25 25 [239653]: mask 0x40000000040000000 set
cpu-bind=MASK - ault03, task 20 20 [239648]: mask 0x400000000400 set
Running problem size 20^3 per domain until completion
Num processors: 27
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 69.6057274 (s)
Grind time (us/z/c)  =  4.2839566 (per dom)  ( 69.605727 overall)
FOM                  =  6302.5848 (z/s)

