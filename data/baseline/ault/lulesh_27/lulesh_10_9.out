cpu-bind=MASK - ault04, task  0  0 [922150]: mask 0x1000000001 set
cpu-bind=MASK - ault04, task 24 24 [922174]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task 11 11 [922161]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 12 12 [922162]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 15 15 [922165]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task 21 21 [922171]: mask 0x10000000010000000 set
cpu-bind=MASK - ault04, task 25 25 [922175]: mask 0x40000000040000000 set
cpu-bind=MASK - ault04, task  1  1 [922151]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  7  7 [922157]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task  2  2 [922152]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  4  4 [922154]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task 14 14 [922164]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 23 23 [922173]: mask 0x20000000020000000 set
cpu-bind=MASK - ault04, task 10 10 [922160]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 16 16 [922166]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 18 18 [922168]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task 20 20 [922170]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 26 26 [922176]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task  3  3 [922153]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  5  5 [922155]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task  6  6 [922156]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task  8  8 [922158]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task 17 17 [922167]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task 19 19 [922169]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task 22 22 [922172]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task  9  9 [922159]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 13 13 [922163]: mask 0x1000000001000000 set
Running problem size 10^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.497091088 (s)
Grind time (us/z/c)  =   4.825205 (per dom)  ( 4.4970911 overall)
FOM                  =  5595.6171 (z/s)

