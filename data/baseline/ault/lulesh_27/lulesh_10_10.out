cpu-bind=MASK - ault01, task  4  4 [4000993]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task 18 18 [4001007]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task  3  3 [4000992]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task 10 10 [4000999]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 12 12 [4001001]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 19 19 [4001008]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 13 13 [4001002]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 11 11 [4001000]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task  5  5 [4000994]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  1  1 [4000990]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  6  6 [4000995]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  8  8 [4000997]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 16 16 [4001005]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 22 22 [4001011]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 25 25 [4001014]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task  0  0 [4000989]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  2  2 [4000991]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  9  9 [4000998]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 17 17 [4001006]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 23 23 [4001012]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 26 26 [4001015]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 24 24 [4001013]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 14 14 [4001003]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 20 20 [4001009]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task  7  7 [4000996]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 15 15 [4001004]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 21 21 [4001010]: mask 0x10000000010000000 set
Running problem size 10^3 per domain until completion
Num processors: 27
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.133619802 (s)
Grind time (us/z/c)  =  4.4352144 (per dom)  ( 4.1336198 overall)
FOM                  =  6087.6426 (z/s)

