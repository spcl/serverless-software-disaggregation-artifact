cpu-bind=MASK - ault04, task  6  6 [920248]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task  1  1 [920243]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  2  2 [920244]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  3  3 [920245]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  4  4 [920246]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task  5  5 [920247]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task  7  7 [920249]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task 15 15 [920257]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task  0  0 [920242]: mask 0x1000000001 set
cpu-bind=MASK - ault04, task 24 24 [920266]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task 26 26 [920268]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task  8  8 [920250]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task  9  9 [920251]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 10 10 [920252]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 11 11 [920253]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 12 12 [920254]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 14 14 [920256]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 16 16 [920258]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 18 18 [920260]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task 19 19 [920261]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task 20 20 [920262]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 21 21 [920263]: mask 0x10000000010000000 set
cpu-bind=MASK - ault04, task 22 22 [920264]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 23 23 [920265]: mask 0x20000000020000000 set
cpu-bind=MASK - ault04, task 25 25 [920267]: mask 0x40000000040000000 set
cpu-bind=MASK - ault04, task 13 13 [920255]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 17 17 [920259]: mask 0x4000000004000000 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 71.82032852 (s)
Grind time (us/z/c)  =  4.4202566 (per dom)  ( 71.820329 overall)
FOM                  =  6108.2427 (z/s)

