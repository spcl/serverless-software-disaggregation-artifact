cpu-bind=MASK - ault01, task  1  1 [1670990]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  0  0 [1670989]: mask 0x1000000001 set
cpu-bind=MASK - ault01, task  2  2 [1670991]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  4  4 [1670993]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [1670995]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  3  3 [1670992]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task 12 12 [1671001]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 13 13 [1671002]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 15 15 [1671004]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 18 18 [1671007]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 21 21 [1671010]: mask 0x10000000010000000 set
cpu-bind=MASK - ault01, task 25 25 [1671014]: mask 0x40000000040000000 set
cpu-bind=MASK - ault01, task  5  5 [1670994]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [1670996]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task  8  8 [1670997]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task  9  9 [1670998]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 10 10 [1670999]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 11 11 [1671000]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 17 17 [1671006]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 19 19 [1671008]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 20 20 [1671009]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 22 22 [1671011]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 23 23 [1671012]: mask 0x20000000020000000 set
cpu-bind=MASK - ault01, task 24 24 [1671013]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 26 26 [1671015]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 14 14 [1671003]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [1671005]: mask 0x100000000100 set
Running problem size 25^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 421875 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  25
   MPI tasks           =  27
   Iteration count     =  2588
   Final Origin Energy =  1.067042e+06
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.565219e-10
        TotalAbsDiff = 6.068149e-09
        MaxRelDiff   = 4.142565e-14

Elapsed time         = 190.6946797 (s)
Grind time (us/z/c)  =  4.7157881 (per dom)  ( 190.69468 overall)
FOM                  =  5725.4481 (z/s)

