cpu-bind=MASK - ault03, task  9  9 [242323]: mask 0x400000000400000 set
cpu-bind=MASK - ault03, task  2  2 [242316]: mask 0x2000000002 set
cpu-bind=MASK - ault03, task 22 22 [242336]: mask 0x800000000800 set
cpu-bind=MASK - ault03, task 11 11 [242325]: mask 0x800000000800000 set
cpu-bind=MASK - ault03, task 21 21 [242335]: mask 0x10000000010000000 set
cpu-bind=MASK - ault03, task 23 23 [242337]: mask 0x20000000020000000 set
cpu-bind=MASK - ault03, task 24 24 [242338]: mask 0x1000000001000 set
cpu-bind=MASK - ault03, task  1  1 [242315]: mask 0x40000000040000 set
cpu-bind=MASK - ault03, task 10 10 [242324]: mask 0x20000000020 set
cpu-bind=MASK - ault03, task  7  7 [242321]: mask 0x200000000200000 set
cpu-bind=MASK - ault03, task 12 12 [242326]: mask 0x40000000040 set
cpu-bind=MASK - ault03, task 17 17 [242331]: mask 0x4000000004000000 set
cpu-bind=MASK - ault03, task 25 25 [242339]: mask 0x40000000040000000 set
cpu-bind=MASK - ault03, task  3  3 [242317]: mask 0x80000000080000 set
cpu-bind=MASK - ault03, task  5  5 [242319]: mask 0x100000000100000 set
cpu-bind=MASK - ault03, task  8  8 [242322]: mask 0x10000000010 set
cpu-bind=MASK - ault03, task 13 13 [242327]: mask 0x1000000001000000 set
cpu-bind=MASK - ault03, task 15 15 [242329]: mask 0x2000000002000000 set
cpu-bind=MASK - ault03, task 18 18 [242332]: mask 0x200000000200 set
cpu-bind=MASK - ault03, task 20 20 [242334]: mask 0x400000000400 set
cpu-bind=MASK - ault03, task  0  0 [242314]: mask 0x1000000001 set
cpu-bind=MASK - ault03, task  6  6 [242320]: mask 0x8000000008 set
cpu-bind=MASK - ault03, task 14 14 [242328]: mask 0x80000000080 set
cpu-bind=MASK - ault03, task 16 16 [242330]: mask 0x100000000100 set
cpu-bind=MASK - ault03, task 26 26 [242340]: mask 0x2000000002000 set
cpu-bind=MASK - ault03, task 19 19 [242333]: mask 0x8000000008000000 set
cpu-bind=MASK - ault03, task  4  4 [242318]: mask 0x4000000004 set
Running problem size 20^3 per domain until completion
Num processors: 27
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 69.43851904 (s)
Grind time (us/z/c)  =  4.2736656 (per dom)  ( 69.438519 overall)
FOM                  =  6317.7615 (z/s)

