cpu-bind=MASK - ault01, task  7  7 [1826697]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task  1  1 [1826691]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  2  2 [1826692]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  4  4 [1826694]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  5  5 [1826695]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  6  6 [1826696]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 23 23 [1826713]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 24 24 [1826714]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task  0  0 [1826690]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task 11 11 [1826701]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 12 12 [1826702]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 17 17 [1826707]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1826708]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 19 19 [1826709]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 26 26 [1826716]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task  3  3 [1826693]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  9  9 [1826699]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 13 13 [1826703]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 15 15 [1826705]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 21 21 [1826711]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 22 22 [1826712]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  8  8 [1826698]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 14 14 [1826704]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 16 16 [1826706]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 10 10 [1826700]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 25 25 [1826715]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task 20 20 [1826710]: mask 0x800000000800 set
Running problem size 15^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 91125 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  15
   MPI tasks           =  27
   Iteration count     =  1477
   Final Origin Energy =  4.234875e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 1.091394e-10
        TotalAbsDiff = 1.131184e-09
        MaxRelDiff   = 1.260475e-14

Elapsed time         = 25.10597323 (s)
Grind time (us/z/c)  =  5.0364298 (per dom)  ( 25.105973 overall)
FOM                  =  5360.9404 (z/s)

