cpu-bind=MASK - ault04, task  2  2 [1745989]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task  1  1 [1745988]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  3  3 [1745990]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  7  7 [1745994]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task 17 17 [1746004]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task 20 20 [1746007]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 25 25 [1746012]: mask 0x10000000010000 set
cpu-bind=MASK - ault04, task  0  0 [1745987]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  8  8 [1745995]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 10 10 [1745997]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 11 11 [1745998]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 12 12 [1745999]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 18 18 [1746005]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 23 23 [1746010]: mask 0x4000000004000 set
cpu-bind=MASK - ault04, task 26 26 [1746013]: mask 0x20000000020000 set
cpu-bind=MASK - ault04, task  5  5 [1745992]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task  6  6 [1745993]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task  9  9 [1745996]: mask 0x400000000400000 set
cpu-bind=MASK - ault04, task 13 13 [1746000]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 14 14 [1746001]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 15 15 [1746002]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task 16 16 [1746003]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task 19 19 [1746006]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task 21 21 [1746008]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task 22 22 [1746009]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task 24 24 [1746011]: mask 0x8000000008000 set
cpu-bind=MASK - ault04, task  4  4 [1745991]: mask 0x8000000008 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 73.12066717 (s)
Grind time (us/z/c)  =  4.5002872 (per dom)  ( 73.120667 overall)
FOM                  =   5999.617 (z/s)

