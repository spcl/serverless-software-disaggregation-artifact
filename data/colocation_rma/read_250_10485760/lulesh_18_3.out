cpu-bind=MASK - ault04, task  4  4 [1743816]: mask 0x8000000008 set
cpu-bind=MASK - ault04, task  5  5 [1743817]: mask 0x100000000100000 set
cpu-bind=MASK - ault04, task  6  6 [1743818]: mask 0x10000000010 set
cpu-bind=MASK - ault04, task  7  7 [1743819]: mask 0x200000000200000 set
cpu-bind=MASK - ault04, task  8  8 [1743820]: mask 0x20000000020 set
cpu-bind=MASK - ault04, task 10 10 [1743822]: mask 0x40000000040 set
cpu-bind=MASK - ault04, task 17 17 [1743829]: mask 0x4000000004000000 set
cpu-bind=MASK - ault04, task 15 15 [1743827]: mask 0x2000000002000000 set
cpu-bind=MASK - ault04, task  1  1 [1743813]: mask 0x40000000040000 set
cpu-bind=MASK - ault04, task  3  3 [1743815]: mask 0x80000000080000 set
cpu-bind=MASK - ault04, task  0  0 [1743812]: mask 0x2000000002 set
cpu-bind=MASK - ault04, task  2  2 [1743814]: mask 0x4000000004 set
cpu-bind=MASK - ault04, task 11 11 [1743823]: mask 0x800000000800000 set
cpu-bind=MASK - ault04, task 12 12 [1743824]: mask 0x80000000080 set
cpu-bind=MASK - ault04, task 13 13 [1743825]: mask 0x1000000001000000 set
cpu-bind=MASK - ault04, task 14 14 [1743826]: mask 0x100000000100 set
cpu-bind=MASK - ault04, task 16 16 [1743828]: mask 0x200000000200 set
cpu-bind=MASK - ault04, task 18 18 [1743830]: mask 0x400000000400 set
cpu-bind=MASK - ault04, task 19 19 [1743831]: mask 0x8000000008000000 set
cpu-bind=MASK - ault04, task 20 20 [1743832]: mask 0x800000000800 set
cpu-bind=MASK - ault04, task 21 21 [1743833]: mask 0x1000000001000 set
cpu-bind=MASK - ault04, task 22 22 [1743834]: mask 0x2000000002000 set
cpu-bind=MASK - ault04, task 23 23 [1743835]: mask 0x4000000004000 set
cpu-bind=MASK - ault04, task 24 24 [1743836]: mask 0x8000000008000 set
cpu-bind=MASK - ault04, task 25 25 [1743837]: mask 0x10000000010000 set
cpu-bind=MASK - ault04, task 26 26 [1743838]: mask 0x20000000020000 set
cpu-bind=MASK - ault04, task  9  9 [1743821]: mask 0x400000000400000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 47.54044749 (s)
Grind time (us/z/c)  =   4.506166 (per dom)  ( 47.540447 overall)
FOM                  =    5991.79 (z/s)

