cpu-bind=MASK - ault03, task  8  8 [1752052]: mask 0x20000000020 set
cpu-bind=MASK - ault03, task 16 16 [1752060]: mask 0x200000000200 set
cpu-bind=MASK - ault03, task  1  1 [1752045]: mask 0x40000000040000 set
cpu-bind=MASK - ault03, task 11 11 [1752055]: mask 0x800000000800000 set
cpu-bind=MASK - ault03, task 19 19 [1752063]: mask 0x8000000008000000 set
cpu-bind=MASK - ault03, task  2  2 [1752046]: mask 0x4000000004 set
cpu-bind=MASK - ault03, task 21 21 [1752065]: mask 0x1000000001000 set
cpu-bind=MASK - ault03, task  0  0 [1752044]: mask 0x2000000002 set
cpu-bind=MASK - ault03, task  3  3 [1752047]: mask 0x80000000080000 set
cpu-bind=MASK - ault03, task  9  9 [1752053]: mask 0x400000000400000 set
cpu-bind=MASK - ault03, task 10 10 [1752054]: mask 0x40000000040 set
cpu-bind=MASK - ault03, task 13 13 [1752057]: mask 0x1000000001000000 set
cpu-bind=MASK - ault03, task 15 15 [1752059]: mask 0x2000000002000000 set
cpu-bind=MASK - ault03, task 17 17 [1752061]: mask 0x4000000004000000 set
cpu-bind=MASK - ault03, task 22 22 [1752066]: mask 0x2000000002000 set
cpu-bind=MASK - ault03, task 24 24 [1752068]: mask 0x8000000008000 set
cpu-bind=MASK - ault03, task 25 25 [1752069]: mask 0x10000000010000 set
cpu-bind=MASK - ault03, task 26 26 [1752070]: mask 0x20000000020000 set
cpu-bind=MASK - ault03, task  4  4 [1752048]: mask 0x8000000008 set
cpu-bind=MASK - ault03, task  5  5 [1752049]: mask 0x100000000100000 set
cpu-bind=MASK - ault03, task  6  6 [1752050]: mask 0x10000000010 set
cpu-bind=MASK - ault03, task 12 12 [1752056]: mask 0x80000000080 set
cpu-bind=MASK - ault03, task 14 14 [1752058]: mask 0x100000000100 set
cpu-bind=MASK - ault03, task 18 18 [1752062]: mask 0x400000000400 set
cpu-bind=MASK - ault03, task 20 20 [1752064]: mask 0x800000000800 set
cpu-bind=MASK - ault03, task 23 23 [1752067]: mask 0x4000000004000 set
cpu-bind=MASK - ault03, task  7  7 [1752051]: mask 0x200000000200000 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 75.19888049 (s)
Grind time (us/z/c)  =   4.628193 (per dom)  (  75.19888 overall)
FOM                  =  5833.8103 (z/s)

