cpu-bind=MASK - ault03, task 24 24 [1750385]: mask 0x8000000008000 set
cpu-bind=MASK - ault03, task 12 12 [1750373]: mask 0x80000000080 set
cpu-bind=MASK - ault03, task 11 11 [1750372]: mask 0x800000000800000 set
cpu-bind=MASK - ault03, task  1  1 [1750362]: mask 0x40000000040000 set
cpu-bind=MASK - ault03, task 18 18 [1750379]: mask 0x400000000400 set
cpu-bind=MASK - ault03, task 21 21 [1750382]: mask 0x1000000001000 set
cpu-bind=MASK - ault03, task  0  0 [1750361]: mask 0x2000000002 set
cpu-bind=MASK - ault03, task  2  2 [1750363]: mask 0x4000000004 set
cpu-bind=MASK - ault03, task 23 23 [1750384]: mask 0x4000000004000 set
cpu-bind=MASK - ault03, task 13 13 [1750374]: mask 0x1000000001000000 set
cpu-bind=MASK - ault03, task  3  3 [1750364]: mask 0x80000000080000 set
cpu-bind=MASK - ault03, task  4  4 [1750365]: mask 0x8000000008 set
cpu-bind=MASK - ault03, task  6  6 [1750367]: mask 0x10000000010 set
cpu-bind=MASK - ault03, task  7  7 [1750368]: mask 0x200000000200000 set
cpu-bind=MASK - ault03, task 14 14 [1750375]: mask 0x100000000100 set
cpu-bind=MASK - ault03, task 15 15 [1750376]: mask 0x2000000002000000 set
cpu-bind=MASK - ault03, task 16 16 [1750377]: mask 0x200000000200 set
cpu-bind=MASK - ault03, task 20 20 [1750381]: mask 0x800000000800 set
cpu-bind=MASK - ault03, task 26 26 [1750387]: mask 0x20000000020000 set
cpu-bind=MASK - ault03, task  5  5 [1750366]: mask 0x100000000100000 set
cpu-bind=MASK - ault03, task  8  8 [1750369]: mask 0x20000000020 set
cpu-bind=MASK - ault03, task  9  9 [1750370]: mask 0x400000000400000 set
cpu-bind=MASK - ault03, task 10 10 [1750371]: mask 0x40000000040 set
cpu-bind=MASK - ault03, task 19 19 [1750380]: mask 0x8000000008000000 set
cpu-bind=MASK - ault03, task 22 22 [1750383]: mask 0x2000000002000 set
cpu-bind=MASK - ault03, task 25 25 [1750386]: mask 0x10000000010000 set
cpu-bind=MASK - ault03, task 17 17 [1750378]: mask 0x4000000004000000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 48.66890419 (s)
Grind time (us/z/c)  =  4.6131278 (per dom)  ( 48.668904 overall)
FOM                  =  5852.8619 (z/s)

