cpu-bind=MASK - ault01, task  4  4 [1030426]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  6  6 [1030428]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 21 21 [1030443]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task  3  3 [1030425]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  5  5 [1030427]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [1030429]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 15 15 [1030437]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 19 19 [1030441]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task  1  1 [1030423]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task 25 25 [1030447]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task  0  0 [1030422]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  2  2 [1030424]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  8  8 [1030430]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 10 10 [1030432]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 13 13 [1030435]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 14 14 [1030436]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 17 17 [1030439]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1030440]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 23 23 [1030445]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 11 11 [1030433]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 12 12 [1030434]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 16 16 [1030438]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 20 20 [1030442]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 22 22 [1030444]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 24 24 [1030446]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task 26 26 [1030448]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task  9  9 [1030431]: mask 0x400000000400000 set
Running problem size 10^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.496166489 (s)
Grind time (us/z/c)  =   4.824213 (per dom)  ( 4.4961665 overall)
FOM                  =  5596.7678 (z/s)

