cpu-bind=MASK - ault01, task  7  7 [1063881]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 13 13 [1063887]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 15 15 [1063889]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task  2  2 [1063876]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  6  6 [1063880]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 12 12 [1063886]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 24 24 [1063898]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task 22 22 [1063896]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  3  3 [1063877]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task 11 11 [1063885]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task  5  5 [1063879]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task 10 10 [1063884]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 21 21 [1063895]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task  4  4 [1063878]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task 14 14 [1063888]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 17 17 [1063891]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1063892]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 19 19 [1063893]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 26 26 [1063900]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task  0  0 [1063874]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  1  1 [1063875]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task 16 16 [1063890]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 20 20 [1063894]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 23 23 [1063897]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 25 25 [1063899]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task  9  9 [1063883]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task  8  8 [1063882]: mask 0x20000000020 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 75.08543847 (s)
Grind time (us/z/c)  =  4.6212111 (per dom)  ( 75.085438 overall)
FOM                  =  5842.6242 (z/s)

