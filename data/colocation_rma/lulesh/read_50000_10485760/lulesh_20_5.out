cpu-bind=MASK - ault01, task  2  2 [1065221]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  3  3 [1065222]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  5  5 [1065224]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [1065226]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task  9  9 [1065228]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task  6  6 [1065225]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 23 23 [1065242]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task  4  4 [1065223]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task 11 11 [1065230]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 15 15 [1065234]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 22 22 [1065241]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  1  1 [1065220]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task 10 10 [1065229]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 20 20 [1065239]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 21 21 [1065240]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 24 24 [1065243]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task 25 25 [1065244]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task 26 26 [1065245]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task  0  0 [1065219]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  8  8 [1065227]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 12 12 [1065231]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 13 13 [1065232]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 14 14 [1065233]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 17 17 [1065236]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1065237]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 19 19 [1065238]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 16 16 [1065235]: mask 0x200000000200 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 75.06442333 (s)
Grind time (us/z/c)  =  4.6199177 (per dom)  ( 75.064423 overall)
FOM                  =  5844.2599 (z/s)

