cpu-bind=MASK - ault01, task  5  5 [992697]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [992699]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 17 17 [992709]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task  1  1 [992693]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  3  3 [992695]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  0  0 [992692]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task 11 11 [992703]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 23 23 [992715]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 12 12 [992704]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 13 13 [992705]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 18 18 [992710]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 24 24 [992716]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task  2  2 [992694]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  4  4 [992696]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  6  6 [992698]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task  8  8 [992700]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task  9  9 [992701]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 10 10 [992702]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 14 14 [992706]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 15 15 [992707]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 16 16 [992708]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 20 20 [992712]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 21 21 [992713]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 22 22 [992714]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 25 25 [992717]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task 26 26 [992718]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task 19 19 [992711]: mask 0x8000000008000000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 48.59076945 (s)
Grind time (us/z/c)  =  4.6057217 (per dom)  ( 48.590769 overall)
FOM                  =  5862.2734 (z/s)

