cpu-bind=MASK - ault01, task 20 20 [989430]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task  0  0 [989410]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  1  1 [989411]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  5  5 [989415]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task 19 19 [989429]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task  9  9 [989419]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 23 23 [989433]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task  7  7 [989417]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 22 22 [989432]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task  3  3 [989413]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task 14 14 [989424]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 21 21 [989431]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task  2  2 [989412]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  4  4 [989414]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  8  8 [989418]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task 15 15 [989425]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 16 16 [989426]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 18 18 [989428]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 25 25 [989435]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task  6  6 [989416]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task 10 10 [989420]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 12 12 [989422]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 13 13 [989423]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 26 26 [989436]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task 11 11 [989421]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 17 17 [989427]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 24 24 [989434]: mask 0x8000000008000 set
Running problem size 15^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 91125 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  15
   MPI tasks           =  27
   Iteration count     =  1477
   Final Origin Energy =  4.234875e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 1.091394e-10
        TotalAbsDiff = 1.131184e-09
        MaxRelDiff   = 1.260475e-14

Elapsed time         = 24.18227654 (s)
Grind time (us/z/c)  =    4.85113 (per dom)  ( 24.182277 overall)
FOM                  =  5565.7136 (z/s)

