cpu-bind=MASK - ault02, task  5  5 [972759]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  4  4 [972758]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  6  6 [972760]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task  7  7 [972761]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task 14 14 [972768]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task  9  9 [972763]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task  0  0 [972754]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  1  1 [972755]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  3  3 [972757]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task 15 15 [972769]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 25 25 [972779]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task 10 10 [972764]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 17 17 [972771]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 21 21 [972775]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 22 22 [972776]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 24 24 [972778]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task 13 13 [972767]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 16 16 [972770]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 11 11 [972765]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 19 19 [972773]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 26 26 [972780]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task  2  2 [972756]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  8  8 [972762]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 12 12 [972766]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 18 18 [972772]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 20 20 [972774]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 23 23 [972777]: mask 0x4000000004000 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 73.67056967 (s)
Grind time (us/z/c)  =  4.5341316 (per dom)  (  73.67057 overall)
FOM                  =  5954.8338 (z/s)

