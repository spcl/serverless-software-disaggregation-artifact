cpu-bind=MASK - ault02, task  0  0 [971909]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  6  6 [971915]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task  8  8 [971917]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 14 14 [971923]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 16 16 [971925]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task  4  4 [971913]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task 23 23 [971932]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task  1  1 [971910]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  5  5 [971914]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  2  2 [971911]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  7  7 [971916]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task 18 18 [971927]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 26 26 [971935]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task 11 11 [971920]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 13 13 [971922]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 15 15 [971924]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 17 17 [971926]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 20 20 [971929]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 25 25 [971934]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task  3  3 [971912]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task 19 19 [971928]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 21 21 [971930]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 22 22 [971931]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 24 24 [971933]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task  9  9 [971918]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 12 12 [971921]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 10 10 [971919]: mask 0x40000000040 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 47.82341169 (s)
Grind time (us/z/c)  =   4.532987 (per dom)  ( 47.823412 overall)
FOM                  =  5956.3374 (z/s)

