cpu-bind=MASK - ault02, task  1  1 [1115337]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  0  0 [1115336]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  2  2 [1115338]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  3  3 [1115339]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task  4  4 [1115340]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  5  5 [1115341]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task 14 14 [1115350]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 16 16 [1115352]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task  7  7 [1115343]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task  8  8 [1115344]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 25 25 [1115361]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task 26 26 [1115362]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task  6  6 [1115342]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task 11 11 [1115347]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 24 24 [1115360]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task  9  9 [1115345]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 13 13 [1115349]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 17 17 [1115353]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 21 21 [1115357]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 22 22 [1115358]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 10 10 [1115346]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 12 12 [1115348]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 15 15 [1115351]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 18 18 [1115354]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 19 19 [1115355]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 20 20 [1115356]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 23 23 [1115359]: mask 0x4000000004000 set
Running problem size 25^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 421875 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  25
   MPI tasks           =  27
   Iteration count     =  2588
   Final Origin Energy =  1.067042e+06
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.565219e-10
        TotalAbsDiff = 6.068149e-09
        MaxRelDiff   = 4.142565e-14

Elapsed time         = 184.8266192 (s)
Grind time (us/z/c)  =  4.5706737 (per dom)  ( 184.82662 overall)
FOM                  =  5907.2254 (z/s)

