cpu-bind=MASK - ault02, task  7  7 [1101267]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task  1  1 [1101261]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  3  3 [1101263]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task  4  4 [1101264]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  5  5 [1101265]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  6  6 [1101266]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task  8  8 [1101268]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 18 18 [1101278]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task  2  2 [1101262]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  9  9 [1101269]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 10 10 [1101270]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 11 11 [1101271]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 20 20 [1101280]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 24 24 [1101284]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task  0  0 [1101260]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task 14 14 [1101274]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 15 15 [1101275]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 16 16 [1101276]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 17 17 [1101277]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 19 19 [1101279]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 21 21 [1101281]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 22 22 [1101282]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 23 23 [1101283]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task 26 26 [1101286]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task 13 13 [1101273]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 25 25 [1101285]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task 12 12 [1101272]: mask 0x80000000080 set
Running problem size 15^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 91125 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  15
   MPI tasks           =  27
   Iteration count     =  1477
   Final Origin Energy =  4.234875e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 1.091394e-10
        TotalAbsDiff = 1.131184e-09
        MaxRelDiff   = 1.260475e-14

Elapsed time         = 23.85484779 (s)
Grind time (us/z/c)  =  4.7854455 (per dom)  ( 23.854848 overall)
FOM                  =  5642.1079 (z/s)

