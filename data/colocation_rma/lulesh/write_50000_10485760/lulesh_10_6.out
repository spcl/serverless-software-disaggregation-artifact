cpu-bind=MASK - ault02, task  3  3 [1029879]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task  1  1 [1029877]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  2  2 [1029878]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  7  7 [1029883]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task 14 14 [1029890]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task  5  5 [1029881]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  4  4 [1029880]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  0  0 [1029876]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  8  8 [1029884]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task  9  9 [1029885]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 21 21 [1029897]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 23 23 [1029899]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task  6  6 [1029882]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task 10 10 [1029886]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 11 11 [1029887]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 17 17 [1029893]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 18 18 [1029894]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 20 20 [1029896]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 22 22 [1029898]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 24 24 [1029900]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task 26 26 [1029902]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task 12 12 [1029888]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 13 13 [1029889]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 15 15 [1029891]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 16 16 [1029892]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 19 19 [1029895]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 25 25 [1029901]: mask 0x10000000010000 set
Running problem size 10^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 27000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  10
   MPI tasks           =  27
   Iteration count     =  932
   Final Origin Energy =  2.025075e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 3.637979e-11
        TotalAbsDiff = 3.020659e-10
        MaxRelDiff   = 7.648872e-15

Elapsed time         = 4.489118659 (s)
Grind time (us/z/c)  =  4.8166509 (per dom)  ( 4.4891187 overall)
FOM                  =  5605.5547 (z/s)

