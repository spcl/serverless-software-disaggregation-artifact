cpu-bind=MASK - ault02, task  2  2 [990884]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  1  1 [990883]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  3  3 [990885]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task  4  4 [990886]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  5  5 [990887]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  6  6 [990888]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task  7  7 [990889]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task 15 15 [990897]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 21 21 [990903]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task  8  8 [990890]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 12 12 [990894]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 23 23 [990905]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task 10 10 [990892]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 11 11 [990893]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 13 13 [990895]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 14 14 [990896]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 16 16 [990898]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 17 17 [990899]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 18 18 [990900]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 19 19 [990901]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 20 20 [990902]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 22 22 [990904]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 24 24 [990906]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task 25 25 [990907]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task 26 26 [990908]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task  0  0 [990882]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  9  9 [990891]: mask 0x400000000400000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 47.82337157 (s)
Grind time (us/z/c)  =  4.5329832 (per dom)  ( 47.823372 overall)
FOM                  =  5956.3424 (z/s)

