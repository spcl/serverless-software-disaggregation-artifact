cpu-bind=MASK - ault01, task  0  0 [1083861]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  5  5 [1083866]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task  7  7 [1083868]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 17 17 [1083878]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task  3  3 [1083864]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task 23 23 [1083884]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 24 24 [1083885]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task 26 26 [1083887]: mask 0x20000000020000 set
cpu-bind=MASK - ault01, task  2  2 [1083863]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  4  4 [1083865]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  6  6 [1083867]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task  8  8 [1083869]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task  9  9 [1083870]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 10 10 [1083871]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 12 12 [1083873]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 13 13 [1083874]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 14 14 [1083875]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 15 15 [1083876]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task 16 16 [1083877]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 18 18 [1083879]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 19 19 [1083880]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 20 20 [1083881]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 21 21 [1083882]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 22 22 [1083883]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 25 25 [1083886]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task  1  1 [1083862]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task 11 11 [1083872]: mask 0x800000000800000 set
Running problem size 18^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 157464 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  18
   MPI tasks           =  27
   Iteration count     =  1809
   Final Origin Energy =  5.892090e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 9.458745e-11
        TotalAbsDiff = 2.021466e-09
        MaxRelDiff   = 1.732521e-14

Elapsed time         = 48.57201125 (s)
Grind time (us/z/c)  =  4.6039437 (per dom)  ( 48.572011 overall)
FOM                  =  5864.5374 (z/s)

