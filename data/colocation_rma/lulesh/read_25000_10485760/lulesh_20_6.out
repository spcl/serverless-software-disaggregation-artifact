cpu-bind=MASK - ault01, task  7  7 [1088740]: mask 0x200000000200000 set
cpu-bind=MASK - ault01, task 15 15 [1088748]: mask 0x2000000002000000 set
cpu-bind=MASK - ault01, task  2  2 [1088735]: mask 0x4000000004 set
cpu-bind=MASK - ault01, task  4  4 [1088737]: mask 0x8000000008 set
cpu-bind=MASK - ault01, task  6  6 [1088739]: mask 0x10000000010 set
cpu-bind=MASK - ault01, task  1  1 [1088734]: mask 0x40000000040000 set
cpu-bind=MASK - ault01, task  5  5 [1088738]: mask 0x100000000100000 set
cpu-bind=MASK - ault01, task 10 10 [1088743]: mask 0x40000000040 set
cpu-bind=MASK - ault01, task 11 11 [1088744]: mask 0x800000000800000 set
cpu-bind=MASK - ault01, task 12 12 [1088745]: mask 0x80000000080 set
cpu-bind=MASK - ault01, task 13 13 [1088746]: mask 0x1000000001000000 set
cpu-bind=MASK - ault01, task 17 17 [1088750]: mask 0x4000000004000000 set
cpu-bind=MASK - ault01, task 18 18 [1088751]: mask 0x400000000400 set
cpu-bind=MASK - ault01, task 23 23 [1088756]: mask 0x4000000004000 set
cpu-bind=MASK - ault01, task 25 25 [1088758]: mask 0x10000000010000 set
cpu-bind=MASK - ault01, task  0  0 [1088733]: mask 0x2000000002 set
cpu-bind=MASK - ault01, task  3  3 [1088736]: mask 0x80000000080000 set
cpu-bind=MASK - ault01, task  8  8 [1088741]: mask 0x20000000020 set
cpu-bind=MASK - ault01, task  9  9 [1088742]: mask 0x400000000400000 set
cpu-bind=MASK - ault01, task 14 14 [1088747]: mask 0x100000000100 set
cpu-bind=MASK - ault01, task 16 16 [1088749]: mask 0x200000000200 set
cpu-bind=MASK - ault01, task 19 19 [1088752]: mask 0x8000000008000000 set
cpu-bind=MASK - ault01, task 20 20 [1088753]: mask 0x800000000800 set
cpu-bind=MASK - ault01, task 21 21 [1088754]: mask 0x1000000001000 set
cpu-bind=MASK - ault01, task 22 22 [1088755]: mask 0x2000000002000 set
cpu-bind=MASK - ault01, task 24 24 [1088757]: mask 0x8000000008000 set
cpu-bind=MASK - ault01, task 26 26 [1088759]: mask 0x20000000020000 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 75.09051734 (s)
Grind time (us/z/c)  =  4.6215237 (per dom)  ( 75.090517 overall)
FOM                  =   5842.229 (z/s)

