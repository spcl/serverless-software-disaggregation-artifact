cpu-bind=MASK - ault02, task  7  7 [1057425]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task  9  9 [1057427]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 15 15 [1057433]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task  0  0 [1057418]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  2  2 [1057420]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  6  6 [1057424]: mask 0x10000000010 set
cpu-bind=MASK - ault02, task  8  8 [1057426]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task 10 10 [1057428]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task  5  5 [1057423]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  4  4 [1057422]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task 13 13 [1057431]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task  1  1 [1057419]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  3  3 [1057421]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task 11 11 [1057429]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 14 14 [1057432]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 17 17 [1057435]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task 25 25 [1057443]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task 18 18 [1057436]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 22 22 [1057440]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 23 23 [1057441]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task 24 24 [1057442]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task 20 20 [1057438]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 19 19 [1057437]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 16 16 [1057434]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 12 12 [1057430]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 21 21 [1057439]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 26 26 [1057444]: mask 0x20000000020000 set
Running problem size 15^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 91125 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  15
   MPI tasks           =  27
   Iteration count     =  1477
   Final Origin Energy =  4.234875e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 1.091394e-10
        TotalAbsDiff = 1.131184e-09
        MaxRelDiff   = 1.260475e-14

Elapsed time         = 23.79808569 (s)
Grind time (us/z/c)  =  4.7740587 (per dom)  ( 23.798086 overall)
FOM                  =  5655.5652 (z/s)

