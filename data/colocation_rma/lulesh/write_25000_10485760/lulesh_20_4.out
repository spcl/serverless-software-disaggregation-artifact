cpu-bind=MASK - ault02, task 17 17 [1063837]: mask 0x4000000004000000 set
cpu-bind=MASK - ault02, task  1  1 [1063821]: mask 0x40000000040000 set
cpu-bind=MASK - ault02, task  2  2 [1063822]: mask 0x4000000004 set
cpu-bind=MASK - ault02, task  4  4 [1063824]: mask 0x8000000008 set
cpu-bind=MASK - ault02, task  0  0 [1063820]: mask 0x2000000002 set
cpu-bind=MASK - ault02, task  3  3 [1063823]: mask 0x80000000080000 set
cpu-bind=MASK - ault02, task  5  5 [1063825]: mask 0x100000000100000 set
cpu-bind=MASK - ault02, task  7  7 [1063827]: mask 0x200000000200000 set
cpu-bind=MASK - ault02, task 10 10 [1063830]: mask 0x40000000040 set
cpu-bind=MASK - ault02, task 13 13 [1063833]: mask 0x1000000001000000 set
cpu-bind=MASK - ault02, task 14 14 [1063834]: mask 0x100000000100 set
cpu-bind=MASK - ault02, task 15 15 [1063835]: mask 0x2000000002000000 set
cpu-bind=MASK - ault02, task 19 19 [1063839]: mask 0x8000000008000000 set
cpu-bind=MASK - ault02, task 20 20 [1063840]: mask 0x800000000800 set
cpu-bind=MASK - ault02, task 21 21 [1063841]: mask 0x1000000001000 set
cpu-bind=MASK - ault02, task 22 22 [1063842]: mask 0x2000000002000 set
cpu-bind=MASK - ault02, task 23 23 [1063843]: mask 0x4000000004000 set
cpu-bind=MASK - ault02, task 24 24 [1063844]: mask 0x8000000008000 set
cpu-bind=MASK - ault02, task 26 26 [1063846]: mask 0x20000000020000 set
cpu-bind=MASK - ault02, task  8  8 [1063828]: mask 0x20000000020 set
cpu-bind=MASK - ault02, task  9  9 [1063829]: mask 0x400000000400000 set
cpu-bind=MASK - ault02, task 11 11 [1063831]: mask 0x800000000800000 set
cpu-bind=MASK - ault02, task 12 12 [1063832]: mask 0x80000000080 set
cpu-bind=MASK - ault02, task 16 16 [1063836]: mask 0x200000000200 set
cpu-bind=MASK - ault02, task 18 18 [1063838]: mask 0x400000000400 set
cpu-bind=MASK - ault02, task 25 25 [1063845]: mask 0x10000000010000 set
cpu-bind=MASK - ault02, task  6  6 [1063826]: mask 0x10000000010 set
Running problem size 20^3 per domain until completion
Num processors: 27
Num threads: 1
Total number of elements: 216000 

To run other sizes, use -s <integer>.
To run a fixed number of iterations, use -i <integer>.
To run a more or less balanced region set, use -b <integer>.
To change the relative costs of regions, use -c <integer>.
To print out progress, use -p
To write an output file for VisIt, use -v
See help (-h) for more options

Run completed:
   Problem size        =  20
   MPI tasks           =  27
   Iteration count     =  2031
   Final Origin Energy =  7.130703e+05
   Testing Plane 0 of Energy Array on rank 0:
        MaxAbsDiff   = 2.910383e-10
        TotalAbsDiff = 2.750312e-09
        MaxRelDiff   = 1.979550e-14

Elapsed time         = 73.63473444 (s)
Grind time (us/z/c)  =   4.531926 (per dom)  ( 73.634734 overall)
FOM                  =  5957.7318 (z/s)

